# Default values for databases.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: nginx
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}



enablePostgreSQL: true
enableMongoDB: false
enableECKOperator: false
enableMariaDB: true

# Descomentar esta condicion para usar si desea usar pgAdmin
#enablePgAdmin: true


postgresql:  
  metrics:
    enabled: true
    serviceMonitor:
      enabled: true 
  
  auth:
    postgresPassword: "rootroot"
    username: "root"
    password: "rootroot"
    database: "sampleDB"
    existingSecret: ""
    secretKeys:
      adminPasswordKey: ""
      userPasswordKey: ""
      replicationPasswordKey: ""

mariadb:
    architecture: replication
    metrics:
        enabled: true
        serviceMonitor:
            enabled: true
    auth:
        database: sampleDB
        rootPassword: rootPass
        username: test
        password: testPass
        replicationPassword: replicaPass
    secondary:
        replicaCount: 2


eck-operator:  
  metrics:
    enabled: true
    serviceMonitor:
      enabled: true


#-----------------------------------------------------------------------
  #Configuracion del pgAdmin, descomentar para una configuraci√≥n propia|
  #---------------------------------------------------------------------

# pgadmin4:
#   env:
#   # can be email or nickname
#     email: admin@admin.com
#     password: SuperSecret

#     enhanced_cookie_protection: "False"

#     ## Add custom environment variables that will be injected to deployment
#     ## Ref: https://www.pgadmin.org/docs/pgadmin4/latest/container_deployment.html
#     ##
#     variables: []
#     # - name: PGADMIN_LISTEN_ADDRESS
#     #   value: "0.0.0.0"
#     # - name: PGADMIN_LISTEN_PORT
#     #   value: "8080"
mongodb:
  metrics:
    enabled: true
    serviceMonitor:
      enabled: true
  architecture: replicaset
  replicaCount: 3
  auth:
    enabled: false
  readinessProbe:
    enabled: true
    initialDelaySeconds: 5
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 6
    successThreshold: 1
  